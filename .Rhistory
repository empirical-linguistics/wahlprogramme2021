par(mar = c(5, 4, 4, 2) + 0.1)
par(mfrow = c(1,1))
# nur ohne Stopwords:
png("trigram_wcs002b.png", width = 6, height = 6, un = "in", res = 1200)
# svglite("trigram_wcs02.svg", width = 6, height = 6)
par(mfrow = c(4,2))
par(mar = c(1, 1, 1, 1) + 0.1)
wordcloud(filter(tri_count, Partei == "spd", in_stopwords == 0)$trigram,
filter(tri_count, Partei == "spd", in_stopwords == 0)$llr,
scale = c(1.5, .001), colors = "red")
wordcloud(filter(tri_count, Partei == "linke", in_stopwords == 0)$trigram,
filter(tri_count, Partei == "linke", in_stopwords == 0)$llr*2,
scale = c(1, .2), colors = "darkred")
wordcloud(filter(tri_count, Partei == "fdp", in_stopwords == 0)$trigram,
filter(tri_count, Partei == "fdp", in_stopwords == 0)$llr,
scale = c(3, .2), colors = "yellow3")
wordcloud(filter(tri_count, Partei == "cdu", in_stopwords == 0)$trigram,
filter(tri_count, Partei == "cdu", in_stopwords == 0)$llr,
scale = c(.5, .000001), colors = "grey50", min.freq = 3)
wordcloud(filter(tri_count, Partei == "csu", in_stopwords == 0)$trigram,           filter(tri_count, Partei == "csu")$llr,
scale = c(2, .01), colors = "black", min.freq = 5.71)
wordcloud(filter(tri_count, Partei == "gruene", in_stopwords==0)$trigram,
filter(tri_count, Partei == "gruene", in_stopwords == 0)$llr,
scale = c(1, .001), colors = "green", min.freq = 1)
wordcloud(filter(tri_count, Partei == "afd", in_stopwords == 0)$trigram,
filter(tri_count, Partei == "afd", in_stopwords == 0)$llr,
scale = c(1.5, .01), colors = "blue", min.freq = 2.5)
dev.off()
par(mar = c(5, 4, 4, 2) + 0.1)
par(mfrow = c(1,1))
set.seed(1985)
png("wordclouds001.png", width = 6, height = 6, un = "in", res = 600)
par(mfrow = c(4,2))
par(mar = c(.5, .5, .5, .5) + 0.1)
wordcloud(words = gruene200$Token, freq = gruene200$LLR/20, col = "green", scale = c(3, .01))
wordcloud(words = afd200$Token, freq = afd200$LLR/20, col = "blue", scale = c(6, .2))
wordcloud(words = fdp200$Token, freq = fdp200$LLR/20, col = "yellow3", scale = c(5, .05))
wordcloud(words = cdu200$Token, freq = cdu200$LLR/20, col = "grey50", scale = c(4, .05))
wordcloud(words = filter(csu200, Token != "ï‚·")$Token, freq = csu200$LLR/20, col = "black", scale = c(4, .05))
wordcloud(words = linke200$Token, freq = fdp200$LLR/20, col = "darkred", scale = c(4, .01))
wordcloud(words = spd200$Token, freq = spd200$LLR/20, col = "red", scale = c(3, .01))
dev.off()
par(mfrow = c(1,1))
par(mar = c(5, 4, 4, 2) + 0.1)
wordcloud(filter(tri_count, Partei == "fdp")$trigram,
filter(tri_count, Partei == "fdp")$llr,
scale = c(1, .005), colors = "yellow3", min.freq = 3)
wordcloud(filter(tri_count, Partei == "fdp")$trigram,
filter(tri_count, Partei == "fdp")$llr,
scale = c(1, .005), colors = "yellow3", min.freq = 3.5)
?wordcloud
wordcloud(filter(tri_count, Partei == "spd")$trigram,
filter(tri_count, Partei == "spd")$llr,
scale = c(1, .001), colors = "red", max.words = 100)
wordcloud(filter(tri_count, Partei == "linke")$trigram,
filter(tri_count, Partei == "linke")$llr,
scale = c(1, .001), colors = "darkred", max.words = 200)
wordcloud(filter(tri_count, Partei == "spd")$trigram,
filter(tri_count, Partei == "spd")$llr,
scale = c(1, .001), colors = "red", max.words = 200)
wordcloud(filter(tri_count, Partei == "fdp")$trigram,
filter(tri_count, Partei == "fdp")$llr,
scale = c(1, .005), colors = "yellow3", max.words = 200)
wordcloud(filter(tri_count, Partei == "fdp")$trigram,
filter(tri_count, Partei == "fdp")$llr,
scale = c(2, .005), colors = "yellow3", max.words = 200)
wordcloud(filter(tri_count, Partei == "fdp")$trigram,
filter(tri_count, Partei == "fdp")$llr,
scale = c(3, .005), colors = "yellow3", max.words = 200)
wordcloud(filter(tri_count, Partei == "fdp")$trigram,
filter(tri_count, Partei == "fdp")$llr,
scale = c(3, .05), colors = "yellow3", max.words = 200)
wordcloud(filter(tri_count, Partei == "fdp")$trigram,
filter(tri_count, Partei == "fdp")$llr,
scale = c(4, .05), colors = "yellow3", max.words = 200)
wordcloud(filter(tri_count, Partei == "fdp")$trigram,
filter(tri_count, Partei == "fdp")$llr,
scale = c(4, .5), colors = "yellow3", max.words = 200)
wordcloud(filter(tri_count, Partei == "fdp")$trigram,
filter(tri_count, Partei == "fdp")$llr,
scale = c(4, .08), colors = "yellow3", max.words = 200)
wordcloud(filter(tri_count, Partei == "fdp")$trigram,
filter(tri_count, Partei == "fdp")$llr,
scale = c(4, .2), colors = "yellow3", max.words = 200)
wordcloud(filter(tri_count, Partei == "cdu")$trigram,
filter(tri_count, Partei == "cdu")$llr/2,
scale = c(2, .01), colors = "grey50", max.words = 200)
wordcloud(filter(tri_count, Partei == "csu")$trigram,
filter(tri_count, Partei == "csu")$llr/3,
scale = c(1, .01), colors = "black", max.words = 200)
wordcloud(filter(tri_count, Partei == "csu")$trigram,
filter(tri_count, Partei == "csu")$llr/3,
scale = c(2, .01), colors = "black", max.words = 200)
wordcloud(filter(tri_count, Partei == "csu")$trigram,
filter(tri_count, Partei == "csu")$llr/3,
scale = c(2, .001), colors = "black", max.words = 200)
wordcloud(filter(tri_count, Partei == "csu")$trigram,
filter(tri_count, Partei == "csu")$llr/3,
scale = c(1, .001), colors = "black", max.words = 200)
wordcloud(filter(tri_count, Partei == "gruene")$trigram,
filter(tri_count, Partei == "gruene")$llr,
scale = c(1.5, .01), colors = "green", max.words = 200)
wordcloud(filter(tri_count, Partei == "afd")$trigram,
filter(tri_count, Partei == "afd")$llr,
scale = c(2, .01), colors = "blue", max.words = 200)
wordcloud(filter(tri_count, Partei == "spd", in_stopwords == 0)$trigram,
filter(tri_count, Partei == "spd", in_stopwords == 0)$llr,
scale = c(1.5, .001), colors = "red", max.words = 200)
wordcloud(filter(tri_count, Partei == "linke", in_stopwords == 0)$trigram,
filter(tri_count, Partei == "linke", in_stopwords == 0)$llr*2,
scale = c(1, .2), colors = "darkred", max.words = 200)
wordcloud(filter(tri_count, Partei == "linke", in_stopwords == 0)$trigram,
filter(tri_count, Partei == "linke", in_stopwords == 0)$llr,
scale = c(1, .2), colors = "darkred", max.words = 200)
wordcloud(filter(tri_count, Partei == "linke", in_stopwords == 0)$trigram,
filter(tri_count, Partei == "linke", in_stopwords == 0)$llr,
scale = c(1, .02), colors = "darkred", max.words = 200)
wordcloud(filter(tri_count, Partei == "linke", in_stopwords == 0)$trigram,
filter(tri_count, Partei == "linke", in_stopwords == 0)$llr,
scale = c(2, .02), colors = "darkred", max.words = 200)
wordcloud(filter(tri_count, Partei == "linke", in_stopwords == 0)$trigram,
filter(tri_count, Partei == "linke", in_stopwords == 0)$llr,
scale = c(1, .002), colors = "darkred", max.words = 200)
wordcloud(filter(tri_count, Partei == "linke", in_stopwords == 0)$trigram,
filter(tri_count, Partei == "linke", in_stopwords == 0)$llr,
scale = c(1, .002), colors = "darkred", max.words = 300)
wordcloud(filter(tri_count, Partei == "linke", in_stopwords == 0)$trigram,
filter(tri_count, Partei == "linke", in_stopwords == 0)$llr,
scale = c(1, .002), colors = "darkred", max.words = 200)
wordcloud(filter(tri_count, Partei == "linke", in_stopwords == 0)$trigram,
filter(tri_count, Partei == "linke", in_stopwords == 0)$llr,
scale = c(1, .002), colors = "darkred", max.words = 200, min.freq = 1)
wordcloud(filter(tri_count, Partei == "linke", in_stopwords == 0)$trigram,
filter(tri_count, Partei == "linke", in_stopwords == 0)$llr,
scale = c(1, .0002), colors = "darkred", max.words = 200, min.freq = 1)
wordcloud(filter(tri_count, Partei == "linke", in_stopwords == 0)$trigram,
filter(tri_count, Partei == "linke", in_stopwords == 0)$llr,
scale = c(1, .00002), colors = "darkred", max.words = 200, min.freq = 1)
warnings()
wordcloud(filter(tri_count, Partei == "linke", in_stopwords == 0)$trigram,
filter(tri_count, Partei == "linke", in_stopwords == 0)$llr,
scale = c(.5, .00002), colors = "darkred", max.words = 200, min.freq = 1)
wordcloud(filter(tri_count, Partei == "fdp", in_stopwords == 0)$trigram,
filter(tri_count, Partei == "fdp", in_stopwords == 0)$llr,
scale = c(3, .2), colors = "yellow3", max.words = 200)
wordcloud(filter(tri_count, Partei == "cdu", in_stopwords == 0)$trigram,
filter(tri_count, Partei == "cdu", in_stopwords == 0)$llr,
scale = c(.5, .000001), colors = "grey50", max.words = 200)
wordcloud(filter(tri_count, Partei == "csu", in_stopwords == 0)$trigram,           filter(tri_count, Partei == "csu")$llr,
scale = c(2, .01), colors = "black", max.words = 200)
wordcloud(filter(tri_count, Partei == "gruene", in_stopwords==0)$trigram,
filter(tri_count, Partei == "gruene", in_stopwords == 0)$llr,
scale = c(1, .001), colors = "green", min.freq = 1,max.words = 200)
wordcloud(filter(tri_count, Partei == "afd", in_stopwords == 0)$trigram,
filter(tri_count, Partei == "afd", in_stopwords == 0)$llr,
scale = c(1.5, .01), colors = "blue", min.freq = 2.5, max.words = 200)
set.seed(1985)
# mit Stopwords:
png("trigram_wcs002a.png", width = 6, height = 6, un = "in", res = 1200)
# svglite("trigram_wcs02.svg", width = 6, height = 6)
par(mfrow = c(4,2))
par(mar = c(1, 1, 1, 1) + 0.1)
wordcloud(filter(tri_count, Partei == "spd")$trigram,
filter(tri_count, Partei == "spd")$llr,
scale = c(1, .001), colors = "red", max.words = 200)
wordcloud(filter(tri_count, Partei == "linke")$trigram,
filter(tri_count, Partei == "linke")$llr,
scale = c(1, .001), colors = "darkred", max.words = 200)
wordcloud(filter(tri_count, Partei == "fdp")$trigram,
filter(tri_count, Partei == "fdp")$llr,
scale = c(4, .2), colors = "yellow3", max.words = 200)
wordcloud(filter(tri_count, Partei == "cdu")$trigram,
filter(tri_count, Partei == "cdu")$llr/2,
scale = c(2, .01), colors = "grey50", max.words = 200)
wordcloud(filter(tri_count, Partei == "csu")$trigram,
filter(tri_count, Partei == "csu")$llr/3,
scale = c(1, .001), colors = "black", max.words = 200)
wordcloud(filter(tri_count, Partei == "gruene")$trigram,
filter(tri_count, Partei == "gruene")$llr,
scale = c(1.5, .01), colors = "green", max.words = 200)
wordcloud(filter(tri_count, Partei == "afd")$trigram,
filter(tri_count, Partei == "afd")$llr,
scale = c(2, .01), colors = "blue", max.words = 200)
dev.off()
par(mar = c(5, 4, 4, 2) + 0.1)
par(mfrow = c(1,1))
# nur ohne Stopwords:
png("trigram_wcs002b.png", width = 6, height = 6, un = "in", res = 1200)
# svglite("trigram_wcs02.svg", width = 6, height = 6)
par(mfrow = c(4,2))
par(mar = c(1, 1, 1, 1) + 0.1)
wordcloud(filter(tri_count, Partei == "spd", in_stopwords == 0)$trigram,
filter(tri_count, Partei == "spd", in_stopwords == 0)$llr,
scale = c(1.5, .001), colors = "red", max.words = 200)
wordcloud(filter(tri_count, Partei == "linke", in_stopwords == 0)$trigram,
filter(tri_count, Partei == "linke", in_stopwords == 0)$llr,
scale = c(.5, .00002), colors = "darkred", max.words = 200, min.freq = 1)
wordcloud(filter(tri_count, Partei == "fdp", in_stopwords == 0)$trigram,
filter(tri_count, Partei == "fdp", in_stopwords == 0)$llr,
scale = c(3, .2), colors = "yellow3", max.words = 200)
wordcloud(filter(tri_count, Partei == "cdu", in_stopwords == 0)$trigram,
filter(tri_count, Partei == "cdu", in_stopwords == 0)$llr,
scale = c(.5, .000001), colors = "grey50", max.words = 200)
wordcloud(filter(tri_count, Partei == "csu", in_stopwords == 0)$trigram,           filter(tri_count, Partei == "csu")$llr,
scale = c(2, .01), colors = "black", max.words = 200)
wordcloud(filter(tri_count, Partei == "gruene", in_stopwords==0)$trigram,
filter(tri_count, Partei == "gruene", in_stopwords == 0)$llr,
scale = c(1, .001), colors = "green", min.freq = 1,max.words = 200)
wordcloud(filter(tri_count, Partei == "afd", in_stopwords == 0)$trigram,
filter(tri_count, Partei == "afd", in_stopwords == 0)$llr,
scale = c(1.5, .01), colors = "blue", min.freq = 2.5, max.words = 200)
dev.off()
par(mar = c(5, 4, 4, 2) + 0.1)
par(mfrow = c(1,1))
png("trigram_wcs002a.png", width = 6, height = 6, un = "in", res = 1200)
# svglite("trigram_wcs02.svg", width = 6, height = 6)
par(mfrow = c(4,2))
par(mar = c(.5, .5, .5, .5) + 0.1)
wordcloud(filter(tri_count, Partei == "spd")$trigram,
filter(tri_count, Partei == "spd")$llr,
scale = c(1, .001), colors = "red", max.words = 200)
wordcloud(filter(tri_count, Partei == "linke")$trigram,
filter(tri_count, Partei == "linke")$llr,
scale = c(1, .001), colors = "darkred", max.words = 200)
wordcloud(filter(tri_count, Partei == "fdp")$trigram,
filter(tri_count, Partei == "fdp")$llr,
scale = c(4, .2), colors = "yellow3", max.words = 200)
wordcloud(filter(tri_count, Partei == "cdu")$trigram,
filter(tri_count, Partei == "cdu")$llr/2,
scale = c(2, .01), colors = "grey50", max.words = 200)
wordcloud(filter(tri_count, Partei == "csu")$trigram,
filter(tri_count, Partei == "csu")$llr/3,
scale = c(1, .001), colors = "black", max.words = 200)
wordcloud(filter(tri_count, Partei == "gruene")$trigram,
filter(tri_count, Partei == "gruene")$llr,
scale = c(1.5, .01), colors = "green", max.words = 200)
wordcloud(filter(tri_count, Partei == "afd")$trigram,
filter(tri_count, Partei == "afd")$llr,
scale = c(2, .01), colors = "blue", max.words = 200)
dev.off()
par(mar = c(5, 4, 4, 2) + 0.1)
par(mfrow = c(1,1))
# nur ohne Stopwords:
png("trigram_wcs002b.png", width = 6, height = 6, un = "in", res = 1200)
# svglite("trigram_wcs02.svg", width = 6, height = 6)
par(mfrow = c(4,2))
par(mar = c(1, 1, 1, 1) + 0.1)
wordcloud(filter(tri_count, Partei == "spd", in_stopwords == 0)$trigram,
filter(tri_count, Partei == "spd", in_stopwords == 0)$llr,
scale = c(1.5, .001), colors = "red", max.words = 200)
wordcloud(filter(tri_count, Partei == "linke", in_stopwords == 0)$trigram,
filter(tri_count, Partei == "linke", in_stopwords == 0)$llr,
scale = c(.5, .00002), colors = "darkred", max.words = 200, min.freq = 1)
wordcloud(filter(tri_count, Partei == "fdp", in_stopwords == 0)$trigram,
filter(tri_count, Partei == "fdp", in_stopwords == 0)$llr,
scale = c(3, .2), colors = "yellow3", max.words = 200)
wordcloud(filter(tri_count, Partei == "cdu", in_stopwords == 0)$trigram,
filter(tri_count, Partei == "cdu", in_stopwords == 0)$llr,
scale = c(.5, .000001), colors = "grey50", max.words = 200)
wordcloud(filter(tri_count, Partei == "csu", in_stopwords == 0)$trigram,           filter(tri_count, Partei == "csu")$llr,
scale = c(2, .01), colors = "black", max.words = 200)
wordcloud(filter(tri_count, Partei == "gruene", in_stopwords==0)$trigram,
filter(tri_count, Partei == "gruene", in_stopwords == 0)$llr,
scale = c(1, .001), colors = "green", min.freq = 1,max.words = 200)
wordcloud(filter(tri_count, Partei == "afd", in_stopwords == 0)$trigram,
filter(tri_count, Partei == "afd", in_stopwords == 0)$llr,
scale = c(1.5, .01), colors = "blue", min.freq = 2.5, max.words = 200)
dev.off()
par(mar = c(5, 4, 4, 2) + 0.1)
par(mfrow = c(1,1))
set.seed(1985)
# mit Stopwords:
png("trigram_wcs002a.png", width = 6, height = 6, un = "in", res = 1200)
# svglite("trigram_wcs02.svg", width = 6, height = 6)
par(mfrow = c(4,2))
par(mar = c(.5, .5, .5, .5) + 0.1)
wordcloud(filter(tri_count, Partei == "spd")$trigram,
filter(tri_count, Partei == "spd")$llr,
scale = c(1, .001), colors = "red", max.words = 200)
wordcloud(filter(tri_count, Partei == "linke")$trigram,
filter(tri_count, Partei == "linke")$llr,
scale = c(1, .001), colors = "darkred", max.words = 200)
wordcloud(filter(tri_count, Partei == "fdp")$trigram,
filter(tri_count, Partei == "fdp")$llr,
scale = c(4, .2), colors = "yellow3", max.words = 200)
wordcloud(filter(tri_count, Partei == "cdu")$trigram,
filter(tri_count, Partei == "cdu")$llr/2,
scale = c(2, .01), colors = "grey50", max.words = 200)
wordcloud(filter(tri_count, Partei == "csu")$trigram,
filter(tri_count, Partei == "csu")$llr/3,
scale = c(1, .001), colors = "black", max.words = 200)
wordcloud(filter(tri_count, Partei == "gruene")$trigram,
filter(tri_count, Partei == "gruene")$llr,
scale = c(1.5, .01), colors = "green", max.words = 200)
wordcloud(filter(tri_count, Partei == "afd")$trigram,
filter(tri_count, Partei == "afd")$llr,
scale = c(2, .01), colors = "blue", max.words = 200)
dev.off()
par(mar = c(5, 4, 4, 2) + 0.1)
par(mfrow = c(1,1))
# nur ohne Stopwords:
png("trigram_wcs002b.png", width = 6, height = 6, un = "in", res = 1200)
# svglite("trigram_wcs02.svg", width = 6, height = 6)
par(mfrow = c(4,2))
par(mar = c(1, 1, 1, 1) + 0.1)
wordcloud(filter(tri_count, Partei == "spd", in_stopwords == 0)$trigram,
filter(tri_count, Partei == "spd", in_stopwords == 0)$llr,
scale = c(1.5, .001), colors = "red", max.words = 200)
wordcloud(filter(tri_count, Partei == "linke", in_stopwords == 0)$trigram,
filter(tri_count, Partei == "linke", in_stopwords == 0)$llr,
scale = c(.5, .00002), colors = "darkred", max.words = 200, min.freq = 1)
wordcloud(filter(tri_count, Partei == "fdp", in_stopwords == 0)$trigram,
filter(tri_count, Partei == "fdp", in_stopwords == 0)$llr,
scale = c(3, .2), colors = "yellow3", max.words = 200)
wordcloud(filter(tri_count, Partei == "cdu", in_stopwords == 0)$trigram,
filter(tri_count, Partei == "cdu", in_stopwords == 0)$llr,
scale = c(.5, .000001), colors = "grey50", max.words = 200)
wordcloud(filter(tri_count, Partei == "csu", in_stopwords == 0)$trigram,           filter(tri_count, Partei == "csu")$llr,
scale = c(2, .01), colors = "black", max.words = 200)
wordcloud(filter(tri_count, Partei == "gruene", in_stopwords==0)$trigram,
filter(tri_count, Partei == "gruene", in_stopwords == 0)$llr,
scale = c(1, .001), colors = "green", min.freq = 1,max.words = 200)
wordcloud(filter(tri_count, Partei == "afd", in_stopwords == 0)$trigram,
filter(tri_count, Partei == "afd", in_stopwords == 0)$llr,
scale = c(1.5, .01), colors = "blue", min.freq = 2.5, max.words = 200)
dev.off()
par(mar = c(5, 4, 4, 2) + 0.1)
par(mfrow = c(1,1))
# Top 200
linke200 <- head(filter(linke, !Token %in% c("li", "strong", "div", "p", "class", "ul", "nav", "h2", "nbsp", "accordion", "href", "a", "id", "h3", "aria", "panel", "role", "h4", "56202", "list")), 200)
count_tokens <- function(d) {
# Interpunktion und ZeilenumbrÃ¼che weg:
d <- gsub("[[:punct:]]|\n", " ", d)
# Tabstopps und mehrere Leerzeichen durch einfache Leerzeichen ersetzen:
d <- gsub("\t| +", " ", d)
# GroÃŸ- und Kleinschreibung entfernen:
d <- tolower(d)
# an Leerzeichen splitten, um an die EinzelwÃ¶rter zu kommen:
d <- unlist(strsplit(d, " "))
# WÃ¶rter auszÃ¤hlen:
d <- table(d) %>% as.data.frame %>% arrange(desc(Freq))
# Spaltennamen umbenennen:
colnames(d) <- c("Token", "Freq")
# WÃ¶rter ausschlieÃŸen
d[!grepl("^kapitel$|^seite$|^[:digit:]*$", d$Token),]
return(d)
}
# Funktion auf die einzelnen Wahlprogramme anwenden:
fdp <- count_tokens(fdp_text)
fdp
spd <- count_tokens(spd_text)
afd <- count_tokens(afd_text)
gruene <- count_tokens(gruene_text)
linke <- count_tokens(linke_text)
cdu <- count_tokens(cdu_text)
csu <- count_tokens(csu_text)
linke %>% head(20)
linke %>% head(30)
# Top 200
linke200 <- head(filter(linke, !Token %in% c("li", "strong", "div", "p", "class", "ul", "nav", "h2", "nbsp", "accordion", "href", "a", "id", "h3", "aria", "panel", "role", "h4", "56202", "list")), 200)
gruene200 <- head(gruene, 200)
fdp200 <- head(fdp, 200)
spd200 <- head(spd, 200)
afd200 <- head(afd, 200)
cdu200 <- head(cdu, 200)
csu200 <- head(csu, 200)
wordcloud(words = spd200$Token, freq = spd200$LLR/20, col = "red", scale = c(3, .01))
spd200
wordcloud(words = spd200$Token, freq = spd200$LLR/20, col = "red", scale = c(3, .01))
wordcloud(words = linke200$Token, freq = fdp200$LLR/20, col = "darkred", scale = c(4, .01))
gruene200
gruene200$Token
count_tokens <- function(d) {
# Interpunktion und ZeilenumbrÃ¼che weg:
d <- gsub("[[:punct:]]|\n", " ", d)
# Tabstopps und mehrere Leerzeichen durch einfache Leerzeichen ersetzen:
d <- gsub("\t| +", " ", d)
# GroÃŸ- und Kleinschreibung entfernen:
d <- tolower(d)
# an Leerzeichen splitten, um an die EinzelwÃ¶rter zu kommen:
d <- unlist(strsplit(d, " "))
# WÃ¶rter auszÃ¤hlen:
d <- table(d) %>% as.data.frame %>% arrange(desc(Freq))
# Spaltennamen umbenennen:
colnames(d) <- c("Token", "Freq")
# WÃ¶rter ausschlieÃŸen
d <- d[!grepl("^kapitel$|^seite$|^[:digit:]*$", d$Token),]
# sicherstellen, dass d$Token character ist
d$Token <- as.character(d$Token)
return(d)
}
# Funktion auf die einzelnen Wahlprogramme anwenden:
fdp <- count_tokens(fdp_text)
fdp
spd <- count_tokens(spd_text)
afd <- count_tokens(afd_text)
gruene <- count_tokens(gruene_text)
linke <- count_tokens(linke_text)
cdu <- count_tokens(cdu_text)
csu <- count_tokens(csu_text)
str(fdp)
# Wahlprogramme:
gruene_size <- sum(gruene$Freq)
spd_size <- sum(spd$Freq)
fdp_size <- sum(fdp$Freq)
cdu_size <- sum(cdu$Freq)
csu_size <- sum(csu$Freq)
afd_size <- sum(afd$Freq)
linke_size <- sum(linke$Freq)
# DWDS:
dwds_size <- sum(dwds$Freq)
# Spaltennamen Ã¤ndern, um Gesamtfrequenz von FDP-Frequenz unterscheiden zu kÃ¶nnen:
colnames(cdu) <- c("Token", "Freq_cdu")
# DWDS-Frequenzen hinzufÃ¼gen:
cdu <- left_join(cdu, dwds)
# NAs durch 0 ersetzen
cdu <- replace_na(cdu, list(Freq = 0, Freq_cdu = 0))
# Spalte mit Log-Likelihood hinzufÃ¼gen:
cdu <- cdu %>% mutate(LLR = llr(cdu$Freq_cdu, cdu$Freq, cdu_size, dwds_size))
# Spalte mit Dice hinzufÃ¼gen:
cdu <- cdu %>% mutate(Dice = dice(cdu$Freq_cdu, cdu$Freq, cdu_size, dwds_size)) %>% arrange(desc(LLR))
# Spalte mit Odds Ratio hinzufÃ¼gen:
cdu <- cdu %>% mutate(odds_ratio = odds_ratio(cdu$Freq_cdu, cdu$Freq, cdu_size, dwds_size))
# Top 10, nach LLR sortiert (Ã¼ber arrange(desc(LLR)), s.o.)
cdu %>% head(10)
# nach Dice sortieren:
cdu %>% arrange(desc(Dice)) %>% head(10)
association_measures <- function(df) {
# welche Partei ist gerade dran? mit deparse(substitute())
# erhalten wir den Namen der Partei als character string:
partei <- deparse(substitute(df))
# das ist wichtig, weil wir die size-Variable der
# entsprechenden Partei brauchen.
df_size <- get(paste0(partei, "_size"))
# Spaltennamen Ã¤ndern, um Gesamtfrequenz von df-Frequenz unterscheiden zu kÃ¶nnen:
colnames(df) <- c("Token", "Freq_df")
# DWDS-Frequenzen hinzufÃ¼gen:
df <- left_join(df, dwds)
# NAs durch 0 ersetzen
df <- replace_na(df, list(Freq = 0, Freq_df = 0))
# Spalten mit Log-Likelihood, Odds Ratio, Dice und p-Wert hinzufÃ¼gen:
df <- df %>% mutate(LLR = llr(df$Freq_df, df$Freq, df_size, dwds_size),
odds_ratio = odds_ratio(df$Freq_df, df$Freq, df_size, dwds_size),
Dice = dice(df$Freq_df, df$Freq, df_size, dwds_size),
p = pchisq(LLR, df = 1, lower.tail = FALSE)) %>% arrange(desc(LLR))
# ausgeben
return(df)
}
# auf die einzelnen Parteien angewendet:
spd <- association_measures(spd)
fdp <- association_measures(fdp)
linke <- association_measures(linke)
afd <- association_measures(afd)
gruene <- association_measures(gruene)
csu <- association_measures(csu)
# Top 200
linke200 <- head(filter(linke, !Token %in% c("li", "strong", "div", "p", "class", "ul", "nav", "h2", "nbsp", "accordion", "href", "a", "id", "h3", "aria", "panel", "role", "h4", "56202", "list")), 200)
gruene200 <- head(gruene, 200)
fdp200 <- head(fdp, 200)
spd200 <- head(spd, 200)
afd200 <- head(afd, 200)
cdu200 <- head(cdu, 200)
csu200 <- head(csu, 200)
wordcloud(words = gruene200$Token, freq = gruene200$LLR/20, col = "green", scale = c(3, .01))
wordcloud(words = fdp200$Token, freq = fdp200$LLR/20, col = "yellow3", scale = c(5, .05))
set.seed(1985)
png("wordclouds001.png", width = 6, height = 6, un = "in", res = 600)
par(mfrow = c(4,2))
par(mar = c(.5, .5, .5, .5) + 0.1)
wordcloud(words = gruene200$Token, freq = gruene200$LLR/20, col = "green", scale = c(3, .01))
wordcloud(words = afd200$Token, freq = afd200$LLR/20, col = "blue", scale = c(6, .2))
wordcloud(words = fdp200$Token, freq = fdp200$LLR/20, col = "yellow3", scale = c(5, .05))
wordcloud(words = cdu200$Token, freq = cdu200$LLR/20, col = "grey50", scale = c(4, .05))
wordcloud(words = filter(csu200, Token != "ï‚·")$Token, freq = csu200$LLR/20, col = "black", scale = c(4, .05))
wordcloud(words = linke200$Token, freq = fdp200$LLR/20, col = "darkred", scale = c(4, .01))
wordcloud(words = spd200$Token, freq = spd200$LLR/20, col = "red", scale = c(3, .01))
dev.off()
par(mfrow = c(1,1))
par(mar = c(5, 4, 4, 2) + 0.1)
wordcloud(words = afd200$Token, freq = afd200$LLR/20, col = "blue", scale = c(6, .2), max.words = 300)
wordcloud(words = afd200$Token, freq = afd200$LLR/20, col = "blue", scale = c(5, .2), max.words = 300)
wordcloud(words = afd200$Token, freq = afd200$LLR/20, col = "blue", scale = c(5, .2), max.words = 250)
wordcloud(words = afd200$Token, freq = afd200$LLR/20, col = "blue", scale = c(4, .2), max.words = 250)
set.seed(1985)
png("wordclouds001.png", width = 6, height = 6, un = "in", res = 600)
par(mfrow = c(4,2))
par(mar = c(.5, .5, .5, .5) + 0.1)
wordcloud(words = gruene200$Token, freq = gruene200$LLR/20, col = "green", scale = c(3, .01))
wordcloud(words = afd200$Token, freq = afd200$LLR/20, col = "blue", scale = c(4, .2), max.words = 250)
wordcloud(words = fdp200$Token, freq = fdp200$LLR/20, col = "yellow3", scale = c(5, .05))
wordcloud(words = cdu200$Token, freq = cdu200$LLR/20, col = "grey50", scale = c(4, .05))
wordcloud(words = filter(csu200, Token != "ï‚·")$Token, freq = csu200$LLR/20, col = "black", scale = c(4, .05))
wordcloud(words = linke200$Token, freq = fdp200$LLR/20, col = "darkred", scale = c(4, .01))
wordcloud(words = spd200$Token, freq = spd200$LLR/20, col = "red", scale = c(3, .01))
dev.off()
par(mfrow = c(1,1))
par(mar = c(5, 4, 4, 2) + 0.1)
wordcloud(words = afd200$Token, freq = afd200$LLR/20, col = "blue", scale = c(3, .1), max.words = 250)
set.seed(1985)
png("wordclouds001.png", width = 6, height = 6, un = "in", res = 600)
par(mfrow = c(4,2))
par(mar = c(.5, .5, .5, .5) + 0.1)
wordcloud(words = gruene200$Token, freq = gruene200$LLR/20, col = "green", scale = c(3, .01))
wordcloud(words = afd200$Token, freq = afd200$LLR/20, col = "blue", scale = c(3, .1), max.words = 250)
wordcloud(words = fdp200$Token, freq = fdp200$LLR/20, col = "yellow3", scale = c(5, .05))
wordcloud(words = cdu200$Token, freq = cdu200$LLR/20, col = "grey50", scale = c(4, .05))
wordcloud(words = filter(csu200, Token != "ï‚·")$Token, freq = csu200$LLR/20, col = "black", scale = c(4, .05))
wordcloud(words = linke200$Token, freq = fdp200$LLR/20, col = "darkred", scale = c(4, .01))
wordcloud(words = spd200$Token, freq = spd200$LLR/20, col = "red", scale = c(3, .01))
dev.off()
par(mfrow = c(1,1))
par(mar = c(5, 4, 4, 2) + 0.1)
